{"version":3,"sources":["webpack:///packages/ui/components/UiMap/providers/Mapbox/MapLine.vue","webpack:///./packages/ui/components/UiMap/mixins/MapLine.js","webpack:///./packages/ui/components/UiMap/providers/Mapbox/MapLine.vue","webpack:///./packages/ui/components/UiMap/providers/Mapbox/MapLine.vue?eeec"],"names":["someCounter","name","render","mixins","inject","data","sourceName","layerName","mounted","this","$nextTick","watch","coordinates","map","source","setData","geoJson","color","getMap","setPaintProperty","width","methods","initialize","on","addSource","type","addLayer","id","paint","console","warn","props","required","default","computed","staticRenderFns","component"],"mappings":"kHACA,gBAEIA,EAAc,EAElB,QACEC,KAAM,cACNC,OAAQ,WAAV,aACEC,OAAQ,CAAC,EAAX,MACEC,OAAQ,CAAC,UAETC,KANF,WAOI,MAAO,CACLC,WAAY,KACZC,UAAW,OAIfC,QAbF,WAaA,WACIC,KAAKC,WAAU,WAAnB,0BAGEC,MAAO,CACLC,YADJ,WAEM,IAAN,gBACM,GAAKH,KAAKH,YAAeO,EAAzB,CAIA,IAAN,+BACWC,GAILA,EAAOC,QAAQN,KAAKO,WAGtBC,MAfJ,WAgBWR,KAAKF,WAGVE,KAAKS,SAASC,iBAAiBV,KAAKF,UAAW,aAAcE,KAAKQ,QAGpEG,MAtBJ,WAuBWX,KAAKF,WAGVE,KAAKS,SAASC,iBAAiBV,KAAKF,UAAW,aAAcE,KAAKW,SAItEC,QAAS,CACPC,WADJ,WACA,WACA,gBACWT,GAKLJ,KAAKH,WAAa,OAAxB,YACMG,KAAKF,UAAY,GAAvB,iCAEMM,EAAIU,GAAG,QAAQ,WACbV,EAAIW,UAAU,EAAtB,YACUC,KAAM,UACNpB,KAAM,EAAhB,UAGQQ,EAAIa,SAAS,CACXC,GAAI,EAAd,UACUb,OAAQ,EAAlB,WAEUW,KAAM,OACNG,MAAO,CACL,aAAc,EAA1B,MACY,aAAc,EAA1B,MACY,eAAgB,SArBpBC,QAAQC,KAAK,iB,oCCxDN,QACXC,MAAO,CACHnB,YAAa,CACToB,UAAU,GAGdf,MAAO,CACHe,UAAU,EACVC,QAAS,sBAGbb,MAAO,CACHY,UAAU,EACVC,QAAS,IAIjBC,SAAU,CACNlB,QADM,WAEF,MAAO,CACH,KAAQ,UACR,SAAY,CACR,KAAQ,aACR,YAAeP,KAAKG,kB,oCCvBxC,WAAIV,EAAQiC,EAAZ,wBAOIC,EAAY,eACd,OACAlC,EACAiC,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,6CClBf,gBAA6Y","file":"js/chunk-623c6d91.1ee5c506.js","sourcesContent":["<script>\r\nimport MixinMapLine from '../../mixins/MapLine.js';\r\n\r\nvar someCounter = 1;\r\n\r\nexport default {\r\n  name: 'mapbox-line',\r\n  render: () => null,\r\n  mixins: [MixinMapLine],\r\n  inject: ['getMap'],\r\n\r\n  data() {\r\n    return {\r\n      sourceName: null,\r\n      layerName: null,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.$nextTick(() => this.initialize());\r\n  },\r\n\r\n  watch: {\r\n    coordinates() {\r\n      let map = this.getMap();\r\n      if (!this.sourceName || !map) {\r\n        return;\r\n      }\r\n\r\n      let source = map.getSource(this.sourceName);\r\n      if (!source) {\r\n        return;\r\n      }\r\n\r\n      source.setData(this.geoJson);\r\n    },\r\n\r\n    color() {\r\n      if (!this.layerName) {\r\n        return;\r\n      }\r\n      this.getMap().setPaintProperty(this.layerName, 'line-color', this.color);\r\n    },\r\n\r\n    width() {\r\n      if (!this.layerName) {\r\n        return;\r\n      }\r\n      this.getMap().setPaintProperty(this.layerName, 'line-width', this.width);\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    initialize() {\r\n      let map = this.getMap();\r\n      if (!map) {\r\n        console.warn('no map :(');\r\n        return;\r\n      }\r\n\r\n      this.sourceName = `line${someCounter++}`;\r\n      this.layerName = `${this.sourceName}_layer`;\r\n\r\n      map.on('load', () => {\r\n        map.addSource(this.sourceName, {\r\n          type: 'geojson',\r\n          data: this.geoJson,\r\n        });\r\n\r\n        map.addLayer({\r\n          id: this.layerName,\r\n          source: this.sourceName,\r\n\r\n          type: 'line',\r\n          paint: {\r\n            'line-color': this.color,\r\n            'line-width': this.width,\r\n            'line-opacity': 1,\r\n          },\r\n        });\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>","export default {\r\n    props: {\r\n        coordinates: {\r\n            required: true\r\n        },\r\n\r\n        color: {\r\n            required: false,\r\n            default: 'rgba(0,0,255, 0.2)'\r\n        },\r\n\r\n        width: {\r\n            required: false,\r\n            default: 5\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        geoJson() {\r\n            return {\r\n                \"type\": \"Feature\",\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": this.coordinates\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","var render, staticRenderFns\nimport script from \"./MapLine.vue?vue&type=script&lang=js&\"\nexport * from \"./MapLine.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapLine.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapLine.vue?vue&type=script&lang=js&\""],"sourceRoot":""}